// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
}

model User {
  id             String       @id @default(uuid())
  email          String       @unique
  password       String
  role           Role
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  submissions    Submission[]
  createdAt      DateTime     @default(now())
  Comment        Comment[]
}

model Organization {
  id          String       @id @default(uuid())
  name        String
  users       User[]
  submissions Submission[]
}

model Submission {
  id             String           @id @default(uuid())
  title          String
  description    String
  fileUrl        String
  status         SubmissionStatus
  student        User             @relation(fields: [studentId], references: [id])
  studentId      String
  organization   Organization     @relation(fields: [organizationId], references: [id])
  organizationId String
  createdAt      DateTime         @default(now())
  Category       Category?        @relation(fields: [categoryId], references: [id])
  categoryId     String?
  Comment        Comment[]
}

model Category {
  id          String       @id @default(uuid())
  name        String
  submissions Submission[]
}

model Comment {
  id           String     @id @default(uuid())
  content      String
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  submissionId String
  submission   Submission @relation(fields: [submissionId], references: [id])
}

enum SubmissionStatus {
  PENDING
  APPROVED
  REJECTED
}
